/* Generated file based on ejs templates */
define([], function() {
    return {
    "TestTemplate.js.ejs": "<%\r\nvar test, i, resultStr;\r\n%>\r\n\r\n\r\nif (typeof window === 'undefined') {\r\n\r\n    // server-side setup\r\n    var webgme = require('webgme');\r\n    var webgmeConfig = require('../../../config.json');\r\n    webGMEGlobal.setConfig(webgmeConfig);\r\n\r\n    var chai = require('chai');\r\n}\r\n\r\ndescribe('<%=name%>', function () {\r\n    'use strict';\r\n    <%for (i = 0; i < tests.length; i += 1) {\r\n        test = tests[i];\r\n        resultStr = test.success ? 'succeed' : 'fail';\r\n%>\r\n    it('<%=test.plugin%> should <%=resultStr%> on <%=test.name%>', function (done) {\r\n        var projectName = 'ADMEditor',\r\n            pluginName = '<%=test.plugin%>',\r\n            testPoint = '<%=test.testPoint%>',\r\n            expectedSuccess = <%=test.success%>,\r\n            assetHash = '<%=test.asset%>';\r\n\r\n        webgme.runPlugin.main(webGMEGlobal.getConfig(), {\r\n            projectName: projectName,\r\n            pluginName: pluginName,\r\n            activeNode: testPoint\r\n        }, function (err, result) {\r\n            chai.expect(err).to.equal(null);\r\n            chai.expect(result.getSuccess()).to.equal(expectedSuccess);\r\n            done();\r\n        });\r\n    });\r\n<%}%>\r\n});"
}});